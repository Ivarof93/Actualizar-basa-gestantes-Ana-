import pandas as pd
import tkinter as tk
from tkinter import filedialog, messagebox
import os

# Función para cargar archivo Excel
def cargar_archivo():
    ruta_archivo = filedialog.askopenfilename(title="Seleccionar archivo base de gestantes", filetypes=[("Archivos Excel", "*.xlsx")])
    return ruta_archivo

# Función principal
def procesar_archivos():
    # Seleccionar archivos
    archivo_base = cargar_archivo()
    if not archivo_base:
        return

    archivo_atenciones = filedialog.askopenfilename(title="Seleccionar archivo de atenciones", filetypes=[("Archivos Excel", "*.xlsx")])
    if not archivo_atenciones:
        return

    # Leer archivos
    base = pd.read_excel(archivo_base)
    atenciones = pd.read_excel(archivo_atenciones, sheet_name="Atenciones")
    usuarias = pd.read_excel(archivo_atenciones, sheet_name="Usuarias")

    print(f"Registros base: {len(base)}")
    print(f"Registros atenciones: {len(atenciones)}")

    # Homologar columnas
    columnas_base = ['Tipo de identificación de la usuaria', 'Número de identificación de la usuaria', 'Primer apellido de la usuaria',
                     'Segundo apellido de la usuaria', 'Primer nombre de la usuaria', 'Segundo nombre de la usuaria',
                     'Fecha de nacimiento', 'Departamento', 'Municipio', 'FPP', 'FECHA ULTIMA CONTROL', 'ultimos 45 dias',
                     'No de Controles', 'GINECOLOGO', 'Riesgo preclamsia', 'Clasificación del Riesgo obstetrico',
                     'Suministro de ácido acetilsalicílico - AS', 'TAMIZAJES ITS', 'fecha de parto', 'POSPARTO.']

    datos_finales = pd.DataFrame(columns=columnas_base)

    for _, row in atenciones.iterrows():
        identificacion = row['3 - Número de identificación de la usuaria']
        usuaria = usuarias[usuarias['7 - Número de identificación de la usuaria'] == identificacion].head(1)

        nuevo_registro = {
            'Tipo de identificación de la usuaria': row['2 - Tipo de documento de la usuaria'],
            'Número de identificación de la usuaria': identificacion,
            'Primer apellido de la usuaria': usuaria['8 - Primer apellido de la usuaria'].values[0] if not usuaria.empty else '',
            'Segundo apellido de la usuaria': usuaria['9 - Segundo apellido de la usuaria'].values[0] if not usuaria.empty else '',
            'Primer nombre de la usuaria': usuaria['10 - Primer nombre de la usuaria'].values[0] if not usuaria.empty else '',
            'Segundo nombre de la usuaria': usuaria['11 - Segundo nombre de la usuaria'].values[0] if not usuaria.empty else '',
            'Fecha de nacimiento': usuaria['12 - Fecha de nacimiento'].values[0] if not usuaria.empty else '',
            'Departamento': '',
            'Municipio': '',
            'FPP': usuaria['16 - Fecha probable de parto'].values[0] if not usuaria.empty else '',
            'FECHA ULTIMA CONTROL': row['4 - Fecha de la tecnología en salud'],
            'ultimos 45 dias': '',
            'No de Controles': '',
            'GINECOLOGO': '',
            'Riesgo preclamsia': row['8 - Clasificación del riesgo de preeclampsia'],
            'Clasificación del Riesgo obstetrico': row['7 - Clasificación del riesgo gestacional'],
            'Suministro de ácido acetilsalicílico - AS': row['9 - Suministro de ácido acetilsalicílico ASA'],
            'TAMIZAJES ITS': '',
            'fecha de parto': row['16 - Fecha de terminación de la gestación'],
            'POSPARTO.': ''
        }

        datos_finales = pd.concat([datos_finales, pd.DataFrame([nuevo_registro])], ignore_index=True)

    print(f"Registros nuevas atenciones: {len(datos_finales)}")

    # Concatenar bases
    resultado_final = pd.concat([base, datos_finales], ignore_index=True)

    print(f"Total registros finales: {len(resultado_final)}")

    # Guardar archivo en misma ruta
    ruta_salida = os.path.join(os.path.dirname(archivo_base), 'Base_Actualizada.xlsx')
    resultado_final.to_excel(ruta_salida, index=False)

    messagebox.showinfo("Proceso finalizado", f"Archivo guardado en: {ruta_salida}")

# Interfaz gráfica
ventana = tk.Tk()
ventana.title("Actualizar Base de Gestantes")
ventana.geometry("400x200")

boton = tk.Button(ventana, text="Seleccionar Archivos y Procesar", command=procesar_archivos)
boton.pack(expand=True)

ventana.mainloop()
